// <auto-generated />
using System;
using ITDepartment_DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITDepartment_DataAccess.Migrations
{
    [DbContext(typeof(ITDBContext))]
    [Migration("20241003084217_noll")]
    partial class noll
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITDepartment_DataAccess.models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Printer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Desktop"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Router"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Switch"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Monitor"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Scanner"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Webcam"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Server"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Access Point"
                        });
                });

            modelBuilder.Entity("ITDepartment_DataAccess.models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcquisitionDate = new DateTime(2022, 10, 3, 11, 42, 17, 46, DateTimeKind.Local).AddTicks(6505),
                            CategoryId = 1,
                            Memo = "Office printer",
                            Name = "HP Printer"
                        },
                        new
                        {
                            Id = 2,
                            AcquisitionDate = new DateTime(2023, 10, 3, 11, 42, 17, 46, DateTimeKind.Local).AddTicks(6557),
                            CategoryId = 2,
                            Memo = "Development laptop",
                            Name = "Dell Laptop"
                        },
                        new
                        {
                            Id = 3,
                            AcquisitionDate = new DateTime(2021, 10, 3, 11, 42, 17, 46, DateTimeKind.Local).AddTicks(6561),
                            CategoryId = 3,
                            Memo = "Design workstation",
                            Name = "iMac Desktop"
                        },
                        new
                        {
                            Id = 4,
                            AcquisitionDate = new DateTime(2023, 10, 3, 11, 42, 17, 46, DateTimeKind.Local).AddTicks(6563),
                            CategoryId = 4,
                            Memo = "Main office router",
                            Name = "Cisco Router"
                        },
                        new
                        {
                            Id = 5,
                            AcquisitionDate = new DateTime(2023, 10, 3, 11, 42, 17, 46, DateTimeKind.Local).AddTicks(6566),
                            CategoryId = 5,
                            Memo = "Network switch",
                            Name = "Netgear Switch"
                        },
                        new
                        {
                            Id = 6,
                            AcquisitionDate = new DateTime(2022, 10, 3, 11, 42, 17, 46, DateTimeKind.Local).AddTicks(6569),
                            CategoryId = 6,
                            Memo = "Office monitor",
                            Name = "Samsung Monitor"
                        },
                        new
                        {
                            Id = 7,
                            AcquisitionDate = new DateTime(2023, 10, 3, 11, 42, 17, 46, DateTimeKind.Local).AddTicks(6571),
                            CategoryId = 7,
                            Memo = "Office scanner",
                            Name = "Epson Scanner"
                        },
                        new
                        {
                            Id = 8,
                            AcquisitionDate = new DateTime(2023, 10, 3, 11, 42, 17, 46, DateTimeKind.Local).AddTicks(6574),
                            CategoryId = 8,
                            Memo = "Video conference webcam",
                            Name = "Logitech Webcam"
                        },
                        new
                        {
                            Id = 9,
                            AcquisitionDate = new DateTime(2021, 10, 3, 11, 42, 17, 46, DateTimeKind.Local).AddTicks(6577),
                            CategoryId = 9,
                            Memo = "Database server",
                            Name = "Dell Server"
                        },
                        new
                        {
                            Id = 10,
                            AcquisitionDate = new DateTime(2023, 10, 3, 11, 42, 17, 46, DateTimeKind.Local).AddTicks(6579),
                            CategoryId = 10,
                            Memo = "Wi-Fi access point",
                            Name = "TP-Link Access Point"
                        });
                });

            modelBuilder.Entity("ITDepartment_DataAccess.models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "IP Address"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Is Color"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Processor"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "RAM"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "Display"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            Name = "Ports"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 5,
                            Name = "Speed"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Name = "Brand"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 6,
                            Name = "Resolution"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 7,
                            Name = "Scanning Resolution"
                        });
                });

            modelBuilder.Entity("ITDepartment_DataAccess.models.PropertyValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyValues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceId = 1,
                            PropertyId = 1,
                            Value = "192.168.1.100"
                        },
                        new
                        {
                            Id = 2,
                            DeviceId = 1,
                            PropertyId = 2,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 3,
                            DeviceId = 2,
                            PropertyId = 3,
                            Value = "Intel i7"
                        },
                        new
                        {
                            Id = 4,
                            DeviceId = 2,
                            PropertyId = 4,
                            Value = "16 GB"
                        },
                        new
                        {
                            Id = 5,
                            DeviceId = 2,
                            PropertyId = 8,
                            Value = "Dell"
                        },
                        new
                        {
                            Id = 6,
                            DeviceId = 3,
                            PropertyId = 8,
                            Value = "Apple"
                        },
                        new
                        {
                            Id = 7,
                            DeviceId = 4,
                            PropertyId = 1,
                            Value = "192.168.1.1"
                        },
                        new
                        {
                            Id = 8,
                            DeviceId = 5,
                            PropertyId = 6,
                            Value = "24"
                        },
                        new
                        {
                            Id = 9,
                            DeviceId = 6,
                            PropertyId = 9,
                            Value = "1920x1080"
                        },
                        new
                        {
                            Id = 10,
                            DeviceId = 7,
                            PropertyId = 10,
                            Value = "4800 dpi"
                        });
                });

            modelBuilder.Entity("ITDepartment_DataAccess.models.Device", b =>
                {
                    b.HasOne("ITDepartment_DataAccess.models.Category", "Category")
                        .WithMany("Devices")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ITDepartment_DataAccess.models.Property", b =>
                {
                    b.HasOne("ITDepartment_DataAccess.models.Category", "Category")
                        .WithMany("Properties")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ITDepartment_DataAccess.models.PropertyValue", b =>
                {
                    b.HasOne("ITDepartment_DataAccess.models.Device", "Device")
                        .WithMany("PropertyValues")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITDepartment_DataAccess.models.Property", "Property")
                        .WithMany("DevicePropertyValues")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ITDepartment_DataAccess.models.Category", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("ITDepartment_DataAccess.models.Device", b =>
                {
                    b.Navigation("PropertyValues");
                });

            modelBuilder.Entity("ITDepartment_DataAccess.models.Property", b =>
                {
                    b.Navigation("DevicePropertyValues");
                });
#pragma warning restore 612, 618
        }
    }
}
